name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

jobs:
  cicd:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies ðŸ“¦
        run: npm ci

      - name: (CI) Run Prettier ðŸŽ¨
        run: npm run prettier:check

      - name: (CI) Run Version Check ðŸ”„
        run: npm run version:check

      - name: (CI) Run Unit Tests ðŸ§ª
        run: npm run test

      - name: (CD) Is Push to Main
        run: |
          if [ ${{ github.ref }} == 'refs/heads/main' ]; then
            echo "shouldRunCD=true" >> $GITHUB_ENV
          else
            echo "shouldRunCD=false" >> $GITHUB_ENV
          fi

      - name: (CD) Is Package.json Changed
        if: ${{ env.shouldRunCD == 'true' }}
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "package.json"; then
            echo "shouldRunCD=true" >> $GITHUB_ENV
          else
            echo "shouldRunCD=false" >> $GITHUB_ENV
          fi

      - name: (CD) Build
        if: ${{ env.shouldRunCD == 'true' }}
        run: npm run build

      - name: (CD) Publish to NPM
        if: ${{ env.shouldRunCD == 'true' }}
        id: publish
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          dry-run: false

      - name: (CD) Post-publish
        if: ${{ env.shouldRunCD == 'true' && steps.publish.outputs.type }}
        run: |
          echo "Published ${{ steps.publish.outputs.type }} version: ${{ steps.publish.outputs.version }}"

      - name: (CD) Publish skipped
        if: ${{ env.shouldRunCD == 'true' && !steps.publish.outputs.type }}
        run: |
          echo "Version in package.json has not changed. Skipping."
          exit 0

      - name: (CD) Create Github release
        if: ${{ env.shouldRunCD == 'true' && steps.publish.outputs.type }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.publish.outputs.version }}
          name: v${{ steps.publish.outputs.version }}
          body: |
            New version: ${{ steps.publish.outputs.version }}
          draft: false
          prerelease: false
          token: ${{ secrets.PAT }}
